- name: Application configuration
  hosts: webservers
  vars_files:
    - vars.yml

  tasks:
    - name: Install PHP and dependencies
      ansible.builtin.package:
        name:
          - php{{ php_version }}
          - php{{ php_version }}-mbstring
          - php{{ php_version }}-xml
          - php{{ php_version }}-zip
          - php{{ php_version }}-mysql
          - php{{ php_version }}-xml
          - php{{ php_version }}-dev
          - php{{ php_version }}-gd
          - php{{ php_version }}-curl
        state: present
        update_cache: true

    - name: Download composer
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/installer
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        mode: "0755"

    - name: Run install script
      ansible.builtin.shell:
        cmd: cat /tmp/installer | php -- --install-dir=/usr/bin
      args:
        creates: /usr/bin/composer.phar

    - name: Move composer.phar -> composer
      ansible.builtin.command: mv /usr/bin/composer.phar /usr/bin/composer
      args:
        creates: /usr/bin/composer

    - name: Make composer executable
      ansible.builtin.file:
        path: /usr/bin/composer
        mode: u+x
        state: file

    - name: Pull Repo changes
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: main
        force: true

    - name: Own {{ app_dir }}
      ansible.builtin.file:
        path: "{{ app_dir }}"
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        recurse: true

    - name: Setup environment variables
      ansible.builtin.template:
        src: ".env.j2"
        dest: "{{ app_dir }}/.env"
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        mode: "0666"

    - name: Set permissions for Laravel storage folder
      ansible.builtin.file:
        path: "{{ app_dir }}/storage"
        state: directory
        recurse: true
        mode: "0777"

    - name: InstallComposerDependencies
      community.general.composer:
        command: install
        working_dir: "{{ app_dir }}"
      environment:
        COMPOSER_ALLOW_SUPERUSER: "1"
        COMPOSER_NO_INTERACTION: "1"

    - name: Cache Config
      ansible.builtin.command:
        cmd: php artisan config:cache
        chdir: "{{ app_dir }}"
      register: cache_config
      changed_when: cache_config.rc != 0

    - name: Clear View Cache
      ansible.builtin.command:
        cmd: php artisan view:clear
        chdir: "{{ app_dir }}"
      register: clear_view_cache
      changed_when: clear_view_cache.rc != 0

    - name: Run Migrations
      ansible.builtin.command:
        cmd: php artisan migrate --force
        chdir: "{{ app_dir }}"
      register: gen_key_output
      changed_when: gen_key_output.rc != 0
